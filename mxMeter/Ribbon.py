

class mxRibbon:
    RIBBON_UNKNOWN = "UNKNOWN"

    RIBBON_MAIN_CALIBER = "RIBBON_MAIN_CALIBER",
    RIBBON_TORPEDO = "RIBBON_TORPEDO",
    RIBBON_BOMB = "RIBBON_BOMB",
    RIBBON_PLANE = "RIBBON_PLANE",
    RIBBON_CRIT = "RIBBON_CRIT",
    RIBBON_FRAG = "RIBBON_FRAG",
    RIBBON_BURN = "RIBBON_BURN",
    RIBBON_FLOOD = "RIBBON_FLOOD",
    RIBBON_CITADEL = "RIBBON_CITADEL",
    RIBBON_BASE_DEFENSE = "RIBBON_BASE_DEFENSE",
    RIBBON_BASE_CAPTURE = "RIBBON_BASE_CAPTURE",
    RIBBON_BASE_CAPTURE_ASSIST = "RIBBON_BASE_CAPTURE_ASSIST",
    RIBBON_SUPPRESSED = "RIBBON_SUPPRESSED",
    RIBBON_SECONDARY_CALIBER = "RIBBON_SECONDARY_CALIBER",
    RIBBON_MAIN_CALIBER_OVER_PENETRATION = "RIBBON_MAIN_CALIBER_OVER_PENETRATION",
    RIBBON_MAIN_CALIBER_PENETRATION = "RIBBON_MAIN_CALIBER_PENETRATION",
    RIBBON_MAIN_CALIBER_NO_PENETRATION = "RIBBON_MAIN_CALIBER_NO_PENETRATION",
    RIBBON_MAIN_CALIBER_RICOCHET = "RIBBON_MAIN_CALIBER_RICOCHET",

    _type_map = {
        0: RIBBON_MAIN_CALIBER,
        1: RIBBON_TORPEDO,
        2: RIBBON_BOMB,
        3: RIBBON_PLANE,
        4: RIBBON_CRIT,
        5: RIBBON_FRAG,
        6: RIBBON_BURN,
        7: RIBBON_FLOOD,
        8: RIBBON_CITADEL,
        9: RIBBON_BASE_DEFENSE,
        10: RIBBON_BASE_CAPTURE,
        11: RIBBON_BASE_CAPTURE_ASSIST,
        12: RIBBON_SUPPRESSED,
        13: RIBBON_SECONDARY_CALIBER,
        14: RIBBON_MAIN_CALIBER_OVER_PENETRATION,
        15: RIBBON_MAIN_CALIBER_PENETRATION,
        16: RIBBON_MAIN_CALIBER_NO_PENETRATION,
        17: RIBBON_MAIN_CALIBER_RICOCHET,
    }

    def __init__(self, ribbon_id):
        if ribbon_id in mxRibbon._type_map:
            self._type = mxRibbon._type_map[ribbon_id]
        else:
            self._type = mxRibbon.RIBBON_UNKNOWN

    _puk_map = {
        RIBBON_FRAG: 3,
        RIBBON_BURN: 0.5,
        RIBBON_FLOOD: 1,
        RIBBON_CITADEL: 1,
        RIBBON_PLANE: 1,
    }

    def getPuk(self):
        if self._type in mxRibbon._puk_map:
            return mxRibbon._puk_map[self._type]
        else:
            return 0.0
